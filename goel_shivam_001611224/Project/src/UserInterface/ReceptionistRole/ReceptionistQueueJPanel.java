/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionistRole;

import Business.Donor.Donor;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.OrganBank;
import Business.Network.Network;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Organization.ReceptionistOrganization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shivam
 */
public class ReceptionistQueueJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private PatientOrganization org;
     private Patient patient;
     private ReceptionistOrganization org1;
     private EcoSystem system;
    /**
     * Creates new form ReceptionistQueueJPanel
     */
    public ReceptionistQueueJPanel(JPanel userProcessContainer, UserAccount account,Organization organization, Enterprise enterprise,EcoSystem system) {
         this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system=system;
        initComponents();
        for (Organization orga : this.enterprise.getOrganizationDirectory().getOrganizationList()){
            if (orga instanceof PatientOrganization){
                org = (PatientOrganization)orga;
                break;
            }
        }
       
        // personlist = org.getPersonDirectory().getPersonList();
        PatientComboBox();
       populateRequestTable();
    }
    public void PatientComboBox(){
{
       PatientComboBox.removeAllItems();
    for(Person patient : org.getPersonDirectory().getPersonList())
            PatientComboBox.addItem(patient);
}}
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        Patient patient = (Patient) PatientComboBox.getSelectedItem();
//       for (Network network : system.getNetworkList()) {
//            
//           for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
              
             //if(enterprise.getEnterpriseType().equals(OrganBank)){
//                  
//                 for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
//                   if(organization instanceof ReceptionistOrganization) {
//                       
//                       for (WorkRequest request : org1.getWorkQueue().getWorkRequestList()){
//                           Patient p=(Patient) ((LabTestWorkRequest) request).getPatient();
//                           if(request.getMessage().equals("Send Ambulance"))
//                           {
//                               
//                               for(Person ptn : org.getPersonDirectory().getPersonList()){
//                                   if(ptn.equals(p)) {
//                            userAccount.getWorkQueue().getWorkRequestList().add(request);
//                            break;
//                                   }
//                            
//                           }
//                           }
////                           break;
////                       }
////                       }
//                 }
//           }
//       }
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
           Patient p = (Patient) ((LabTestWorkRequest) request).getPatient();
           if(p.equals(patient)){
//               if(!request.getStatus().equals("Send Ambulance")){
           
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            
            model.addRow(row);
        
    }}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PatientComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Patient");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 366, 70, -1));

        PatientComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientComboBoxActionPerformed(evt);
            }
        });
        add(PatientComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 362, 100, -1));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 407, 346, 97));

        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 553, -1, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 553, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DoctorRole/Fotolia_38168553_XS.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void PatientComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientComboBoxActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_PatientComboBoxActionPerformed

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
int flag=0;
        patient = (Patient) PatientComboBox.getSelectedItem();
         for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
             Patient p =(Patient) ((LabTestWorkRequest) request).getPatient();
             if(p.equals(patient)){
                 flag=1;
             String result = ((LabTestWorkRequest) request).getStatus();
             if(result.equals("Processing") || result.equals("Pending")){
                
        JOptionPane.showMessageDialog(null, "A Pending Request for Patient already exist", "Info", JOptionPane.INFORMATION_MESSAGE);
        break;
             }
             else
                 
         {
             CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise, patient));
        layout.next(userProcessContainer);
         } 
             //break;
             }
          
         }            
         if(flag==0) {
          CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise, patient));
        layout.next(userProcessContainer);}
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox PatientComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
